@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin absCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin triangle($size: 1rem, $color: $color-dark, $radius: 0, $y: -50%) {
    content: "";
    position: absolute;

    left: 50%;
    top: 0;
    transform: translate(-50%, $y) rotate(45deg);

    border-top-left-radius: $radius;
    border-top: $size solid $color;
    border-left: $size solid $color;
    border-right: $size solid transparent;
    border-bottom: $size solid transparent;
}

@mixin glowingText($color, $outline: false, $width: 2px) {
    @if $outline==true {
        color: transparent;
        -webkit-text-stroke-color: $color;
        -webkit-text-stroke-width: $width;
        text-shadow: none;
        filter: drop-shadow(0px 0px 3px $color);
    }

    @else {
        text-shadow: 0px 0px 7px rgba($color, .9);
        color: rgba($color, .3);
    }
}

// MEDIA QUERY MANAGER
/* 
0px - 600px: Phone
600px - 900px: Tablet portrait
900px - 1200px: Tablet landscape
[1200px - 1800px] is where our normal styles apply
1800px+: Big desktop

// @mixin respond-phone {
//     @media (max-width: 600px) {
//         @content;
//     }
// }

$breakpoint argument choices:
- phone
- tab-port
- tab-land
- big-desktop

1em = 16px
*/
@mixin respond($breakpoint) {
    @if $breakpoint==phone {
        @media only screen and (max-width: 37.5em) {
            //600px
            @content;
        }
    }

    @if $breakpoint==tab-port {
        @media only screen and (max-width: 56.25em) {
            //900px
            @content;
        }
    }

    @if $breakpoint==tab-land {
        @media only screen and (max-width: 75em) {
            //1200px
            @content;
        }
    }

    @if $breakpoint==big-desktop {
        @media only screen and (min-width: 112.5em) {
            //1800px
            @content;
        }
    }
}